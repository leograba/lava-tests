#!/bin/sh

set -x

if [ -f $1 ]; then
	lava-test-case tinymembench-logfile-exist --result pass

else
	lava-test-case tinymembench-logfile-exist --result fail
fi

MOD_ID=$(cat /proc/device-tree/toradex,product-id)

case $MOD_ID in
	# Which parameters to check? Thresholds must be revised
	# C copy
	# C fill
	# standard memcpy
	# standard memset
	# latency for large buffer

	# apalis iMX6
	0028)	C_COPY_MIN=500; C_COPY_MAX=2000; # apalis iMX6Q 2GB IT
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0027)	C_COPY_MIN=500; C_COPY_MAX=2000; # apalis iMX6Q 1GB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0035)	C_COPY_MIN=500; C_COPY_MAX=2000; # apalis iMX6D 1Gb IT
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0029)	C_COPY_MIN=500; C_COPY_MAX=2000; # apalis iMX6D 512MB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;

	# apalis T30
	0026)	C_COPY_MIN=500; C_COPY_MAX=2000; # apalis T30 1GB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0031)	C_COPY_MIN=500; C_COPY_MAX=2000; # apalis T30 1GB IT
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0025)	C_COPY_MIN=500; C_COPY_MAX=2000; # apalis T30 2GB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;

	# apalis TK1
	0034)	C_COPY_MIN=500; C_COPY_MAX=2000; # apalis TK1 2GB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;

	# colibri iMX6
	0014)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri iMX6S 256MB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0016)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri iMX6S 256MB IT
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0015)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri iMX6DL 512MB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0017)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri iMX6DL 512MB IT
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;

	# colibri iMX6ULL
	0036)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri iMX6ULL 256MB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0040)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri iMX6ULL 512MB WiFi/BL IT
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;

	# colibri iMX7
	0032)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri iMX7S 256MB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0033)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri iMX7D 512MB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0039)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri iMX7D 1GB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;

	# colibri T30
	0023)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri T30 1GB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0030)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri T30 1GB IT
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;

	# colibri T20
	0020)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri T20 256MB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0024)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri T20 256MB IT
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0021)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri T20 512MB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0022)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri T20 512MB IT
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;

	# colibri VF61
	0012)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri VF61 256MB IT
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;

	# colibri VF50
	0010)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri VF50 128MB
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;
	0013)	C_COPY_MIN=500; C_COPY_MAX=2000; # colibri VF50 128MB IT
			C_FILL_MIN=1000; C_FILL_MAX=3000;
			STD_MEMCPY_MIN=500; STD_MEMCPY_MAX=2000;
			STD_MEMSET_MIN=1000; STD_MEMSET_MAX=3000;
			LATENCY_MIN=60; LATENCY_MAX=250;;

	*) exit 1 ;
esac

C_COPY=$(cat tinymembench.log | grep "C copy  " | awk '{print $4}' | cut -d "." -f1)
C_FILL=$(cat tinymembench.log | grep "C fill  " | awk '{print $4}' | cut -d "." -f1)
STD_MEMCPY=$(cat tinymembench.log | grep "standard memcpy" | awk '{print $4}' | cut -d "." -f1)
STD_MEMSET=$(cat tinymembench.log | grep "standard memset" | awk '{print $4}' | cut -d "." -f1)
LATENCY=$(cat tinymembench.log | grep "67108864" | awk '{print $3}' | cut -d "." -f1)

# C copy
if [ "$C_COPY" -lt "$C_COPY_MIN" ] || [ "$C_COPY" -gt "$C_COPY_MAX" ]; then
    lava-test-case tinymembench-c-copy --result fail
else
    lava-test-case tinymembench-c-copy --result pass --measurement ${C_COPY}
fi

# C fill
if [ "$C_FILL" -lt "$C_FILL_MIN" ] || [ "$C_FILL" -gt "$C_FILL_MAX" ]; then
    lava-test-case tinymembench-c-fill --result fail
else
    lava-test-case tinymembench-c-fill --result pass --measurement ${C_FILL}
fi

# standard memcpy
if [ "$STD_MEMCPY" -lt "$STD_MEMCPY_MIN" ] || [ "$STD_MEMCPY" -gt "$STD_MEMCPY_MAX" ]; then
    lava-test-case tinymembench-std-memcpy --result fail
else
    lava-test-case tinymembench-std-memcpy --result pass --measurement ${STD_MEMCPY}
fi

# standard memset
if [ "$STD_MEMSET" -lt "$STD_MEMSET_MIN" ] || [ "$STD_MEMSET" -gt "$STD_MEMSET_MAX" ]; then
    lava-test-case tinymembench-std-memset --result fail
else
    lava-test-case tinymembench-std-memset --result pass --measurement ${STD_MEMSET}
fi

# latency for buffer block size 64MB
if [ "$LATENCY" -lt "$LATENCY_MIN" ] || [ "$LATENCY" -gt "$LATENCY_MAX" ]; then
    lava-test-case tinymembench-latency-64MB-buffer --result fail
else
    lava-test-case tinymembench-latency-64MB-buffer --result pass --measurement ${LATENCY}
fi
